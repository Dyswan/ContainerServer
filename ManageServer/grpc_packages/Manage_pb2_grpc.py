# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import Manage_pb2 as Manage__pb2


class ManagerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListContainers = channel.unary_unary(
                '/Manager/ListContainers',
                request_serializer=Manage__pb2.ListContainers_Request.SerializeToString,
                response_deserializer=Manage__pb2.ListContainers_Response.FromString,
                )
        self.PruneContainers = channel.unary_unary(
                '/Manager/PruneContainers',
                request_serializer=Manage__pb2.PruneContainers_Request.SerializeToString,
                response_deserializer=Manage__pb2.PruneContainers_Response.FromString,
                )
        self.GetContainer = channel.unary_unary(
                '/Manager/GetContainer',
                request_serializer=Manage__pb2.GetContainer_Request.SerializeToString,
                response_deserializer=Manage__pb2.GetContainer_Response.FromString,
                )
        self.StartContainer = channel.unary_unary(
                '/Manager/StartContainer',
                request_serializer=Manage__pb2.StartContainer_Request.SerializeToString,
                response_deserializer=Manage__pb2.StartContainer_Response.FromString,
                )
        self.StopContainer = channel.unary_unary(
                '/Manager/StopContainer',
                request_serializer=Manage__pb2.StopContainer_Request.SerializeToString,
                response_deserializer=Manage__pb2.StopContainer_Response.FromString,
                )
        self.RestartContainer = channel.unary_unary(
                '/Manager/RestartContainer',
                request_serializer=Manage__pb2.RestartContainer_Request.SerializeToString,
                response_deserializer=Manage__pb2.RestartContainer_Response.FromString,
                )
        self.RemoveContainer = channel.unary_unary(
                '/Manager/RemoveContainer',
                request_serializer=Manage__pb2.RemoveContainer_Request.SerializeToString,
                response_deserializer=Manage__pb2.RemoveContainer_Response.FromString,
                )
        self.CreateContainer = channel.unary_unary(
                '/Manager/CreateContainer',
                request_serializer=Manage__pb2.CreateContainer_Request.SerializeToString,
                response_deserializer=Manage__pb2.CreateContainer_Response.FromString,
                )
        self.GetFile = channel.unary_stream(
                '/Manager/GetFile',
                request_serializer=Manage__pb2.GetFile_Request.SerializeToString,
                response_deserializer=Manage__pb2.GetFile_Response.FromString,
                )
        self.UpdateFile = channel.unary_unary(
                '/Manager/UpdateFile',
                request_serializer=Manage__pb2.UpdateFile_Request.SerializeToString,
                response_deserializer=Manage__pb2.UpdateFile_Response.FromString,
                )
        self.ListFile = channel.unary_unary(
                '/Manager/ListFile',
                request_serializer=Manage__pb2.ListFile_Request.SerializeToString,
                response_deserializer=Manage__pb2.ListFile_Response.FromString,
                )
        self.PruneImages = channel.unary_unary(
                '/Manager/PruneImages',
                request_serializer=Manage__pb2.PruneImages_Request.SerializeToString,
                response_deserializer=Manage__pb2.PruneImages_Response.FromString,
                )
        self.ListImages = channel.unary_unary(
                '/Manager/ListImages',
                request_serializer=Manage__pb2.ListImages_Request.SerializeToString,
                response_deserializer=Manage__pb2.ListImages_Response.FromString,
                )
        self.PullImage = channel.unary_unary(
                '/Manager/PullImage',
                request_serializer=Manage__pb2.PullImage_Request.SerializeToString,
                response_deserializer=Manage__pb2.PullImage_Response.FromString,
                )
        self.BuildImage = channel.unary_unary(
                '/Manager/BuildImage',
                request_serializer=Manage__pb2.BuildImage_Request.SerializeToString,
                response_deserializer=Manage__pb2.BuildImage_Response.FromString,
                )
        self.GetImage = channel.unary_unary(
                '/Manager/GetImage',
                request_serializer=Manage__pb2.GetImage_Request.SerializeToString,
                response_deserializer=Manage__pb2.GetImage_Response.FromString,
                )
        self.RemoveImage = channel.unary_unary(
                '/Manager/RemoveImage',
                request_serializer=Manage__pb2.RemoveImage_Request.SerializeToString,
                response_deserializer=Manage__pb2.RemoveImage_Response.FromString,
                )


class ManagerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListContainers(self, request, context):
        """Container utils
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PruneContainers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetContainer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartContainer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopContainer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RestartContainer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveContainer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateContainer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFile(self, request, context):
        """所有的data为tar
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PruneImages(self, request, context):
        """Image utils
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListImages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PullImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BuildImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetImage(self, request, context):
        """rpc LoadImage() returns (){}
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ManagerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListContainers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListContainers,
                    request_deserializer=Manage__pb2.ListContainers_Request.FromString,
                    response_serializer=Manage__pb2.ListContainers_Response.SerializeToString,
            ),
            'PruneContainers': grpc.unary_unary_rpc_method_handler(
                    servicer.PruneContainers,
                    request_deserializer=Manage__pb2.PruneContainers_Request.FromString,
                    response_serializer=Manage__pb2.PruneContainers_Response.SerializeToString,
            ),
            'GetContainer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetContainer,
                    request_deserializer=Manage__pb2.GetContainer_Request.FromString,
                    response_serializer=Manage__pb2.GetContainer_Response.SerializeToString,
            ),
            'StartContainer': grpc.unary_unary_rpc_method_handler(
                    servicer.StartContainer,
                    request_deserializer=Manage__pb2.StartContainer_Request.FromString,
                    response_serializer=Manage__pb2.StartContainer_Response.SerializeToString,
            ),
            'StopContainer': grpc.unary_unary_rpc_method_handler(
                    servicer.StopContainer,
                    request_deserializer=Manage__pb2.StopContainer_Request.FromString,
                    response_serializer=Manage__pb2.StopContainer_Response.SerializeToString,
            ),
            'RestartContainer': grpc.unary_unary_rpc_method_handler(
                    servicer.RestartContainer,
                    request_deserializer=Manage__pb2.RestartContainer_Request.FromString,
                    response_serializer=Manage__pb2.RestartContainer_Response.SerializeToString,
            ),
            'RemoveContainer': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveContainer,
                    request_deserializer=Manage__pb2.RemoveContainer_Request.FromString,
                    response_serializer=Manage__pb2.RemoveContainer_Response.SerializeToString,
            ),
            'CreateContainer': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateContainer,
                    request_deserializer=Manage__pb2.CreateContainer_Request.FromString,
                    response_serializer=Manage__pb2.CreateContainer_Response.SerializeToString,
            ),
            'GetFile': grpc.unary_stream_rpc_method_handler(
                    servicer.GetFile,
                    request_deserializer=Manage__pb2.GetFile_Request.FromString,
                    response_serializer=Manage__pb2.GetFile_Response.SerializeToString,
            ),
            'UpdateFile': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateFile,
                    request_deserializer=Manage__pb2.UpdateFile_Request.FromString,
                    response_serializer=Manage__pb2.UpdateFile_Response.SerializeToString,
            ),
            'ListFile': grpc.unary_unary_rpc_method_handler(
                    servicer.ListFile,
                    request_deserializer=Manage__pb2.ListFile_Request.FromString,
                    response_serializer=Manage__pb2.ListFile_Response.SerializeToString,
            ),
            'PruneImages': grpc.unary_unary_rpc_method_handler(
                    servicer.PruneImages,
                    request_deserializer=Manage__pb2.PruneImages_Request.FromString,
                    response_serializer=Manage__pb2.PruneImages_Response.SerializeToString,
            ),
            'ListImages': grpc.unary_unary_rpc_method_handler(
                    servicer.ListImages,
                    request_deserializer=Manage__pb2.ListImages_Request.FromString,
                    response_serializer=Manage__pb2.ListImages_Response.SerializeToString,
            ),
            'PullImage': grpc.unary_unary_rpc_method_handler(
                    servicer.PullImage,
                    request_deserializer=Manage__pb2.PullImage_Request.FromString,
                    response_serializer=Manage__pb2.PullImage_Response.SerializeToString,
            ),
            'BuildImage': grpc.unary_unary_rpc_method_handler(
                    servicer.BuildImage,
                    request_deserializer=Manage__pb2.BuildImage_Request.FromString,
                    response_serializer=Manage__pb2.BuildImage_Response.SerializeToString,
            ),
            'GetImage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetImage,
                    request_deserializer=Manage__pb2.GetImage_Request.FromString,
                    response_serializer=Manage__pb2.GetImage_Response.SerializeToString,
            ),
            'RemoveImage': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveImage,
                    request_deserializer=Manage__pb2.RemoveImage_Request.FromString,
                    response_serializer=Manage__pb2.RemoveImage_Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Manager', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Manager(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListContainers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Manager/ListContainers',
            Manage__pb2.ListContainers_Request.SerializeToString,
            Manage__pb2.ListContainers_Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PruneContainers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Manager/PruneContainers',
            Manage__pb2.PruneContainers_Request.SerializeToString,
            Manage__pb2.PruneContainers_Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetContainer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Manager/GetContainer',
            Manage__pb2.GetContainer_Request.SerializeToString,
            Manage__pb2.GetContainer_Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartContainer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Manager/StartContainer',
            Manage__pb2.StartContainer_Request.SerializeToString,
            Manage__pb2.StartContainer_Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopContainer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Manager/StopContainer',
            Manage__pb2.StopContainer_Request.SerializeToString,
            Manage__pb2.StopContainer_Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RestartContainer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Manager/RestartContainer',
            Manage__pb2.RestartContainer_Request.SerializeToString,
            Manage__pb2.RestartContainer_Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveContainer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Manager/RemoveContainer',
            Manage__pb2.RemoveContainer_Request.SerializeToString,
            Manage__pb2.RemoveContainer_Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateContainer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Manager/CreateContainer',
            Manage__pb2.CreateContainer_Request.SerializeToString,
            Manage__pb2.CreateContainer_Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/Manager/GetFile',
            Manage__pb2.GetFile_Request.SerializeToString,
            Manage__pb2.GetFile_Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Manager/UpdateFile',
            Manage__pb2.UpdateFile_Request.SerializeToString,
            Manage__pb2.UpdateFile_Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Manager/ListFile',
            Manage__pb2.ListFile_Request.SerializeToString,
            Manage__pb2.ListFile_Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PruneImages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Manager/PruneImages',
            Manage__pb2.PruneImages_Request.SerializeToString,
            Manage__pb2.PruneImages_Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListImages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Manager/ListImages',
            Manage__pb2.ListImages_Request.SerializeToString,
            Manage__pb2.ListImages_Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PullImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Manager/PullImage',
            Manage__pb2.PullImage_Request.SerializeToString,
            Manage__pb2.PullImage_Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BuildImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Manager/BuildImage',
            Manage__pb2.BuildImage_Request.SerializeToString,
            Manage__pb2.BuildImage_Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Manager/GetImage',
            Manage__pb2.GetImage_Request.SerializeToString,
            Manage__pb2.GetImage_Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Manager/RemoveImage',
            Manage__pb2.RemoveImage_Request.SerializeToString,
            Manage__pb2.RemoveImage_Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
